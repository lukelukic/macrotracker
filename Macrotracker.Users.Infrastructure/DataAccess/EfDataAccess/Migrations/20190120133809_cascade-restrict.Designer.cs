// <auto-generated />
using System;
using MacroTracker.Users.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MacroTracker.Users.Infrastructure.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20190120133809_cascade-restrict")]
    partial class cascaderestrict
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MacroTracker.Users.Domain.TrainerUser", b =>
                {
                    b.Property<Guid>("TrainerId");

                    b.Property<Guid>("UserId");

                    b.HasKey("TrainerId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TrainerUser");
                });

            modelBuilder.Entity("MacroTracker.Users.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.Property<string>("user_type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.HasAlternateKey("Username");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("user_type").HasValue("user");
                });

            modelBuilder.Entity("MacroTracker.Users.Domain.Entities.Trainer", b =>
                {
                    b.HasBaseType("MacroTracker.Users.Domain.User");

                    b.HasDiscriminator().HasValue("trainer");
                });

            modelBuilder.Entity("MacroTracker.Users.Domain.TrainerUser", b =>
                {
                    b.HasOne("MacroTracker.Users.Domain.Entities.Trainer", "Trainer")
                        .WithMany("TrainerUsers")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MacroTracker.Users.Domain.User", "User")
                        .WithMany("UserTrainers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
