ˆ
PD:\macrotracker\MacroTracker\MacroTracker.Users\Controllers\BaseApiController.cs
	namespace 	
MacroTracker
 
. 
Users 
. 
Api  
.  !
Controllers! ,
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
BaseApiController "
:# $
ControllerBase% 3
{		 
	protected

 
	IMediator

 
Mediator

 $
{

% &
get

' *
;

* +
}

, -
public 
BaseApiController  
(  !
	IMediator! *
mediator+ 3
)3 4
=>5 7
Mediator8 @
=A B
mediatorC K
;K L
} 
} ð
QD:\macrotracker\MacroTracker\MacroTracker.Users\Controllers\RequestsController.cs
	namespace 	
MacroTracker
 
. 
Users 
. 
Api  
.  !
Controllers! ,
{		 
[

 
ApiController

 
]

 
public 

class 
RequestsController #
:$ %
BaseApiController& 7
{ 
public 
RequestsController !
(! "
	IMediator" +
mediator, 4
)4 5
:6 7
base8 <
(< =
mediator= E
)E F
{ 	
} 	
[ 	
HttpPost	 
( 
$str #
)# $
]$ %
public 
async 
Task 
< 
IActionResult '
>' (
	PostAsync) 2
(2 3
[3 4
FromBody4 <
]< =&
SendTrainingRequestRequest> X
requestY `
)` a
{ 	
try 
{ 
await 
Mediator 
. 
Send #
(# $
request$ +
)+ ,
;, -
return 
Ok 
( 
) 
; 
} 
catch 
( #
EntityNotFoundException *
e+ ,
), -
{ 
return 
NotFound 
(  
e  !
.! "
Message" )
)) *
;* +
} 
catch 
( (
EntityAlreadyExistsException /
e0 1
)1 2
{ 
return   
Conflict   
(    
e    !
.  ! "
Message  " )
)  ) *
;  * +
}!! 
finally"" 
{## 

BadRequest$$ 
($$ 
)$$ 
;$$ 
}%% 
}&& 	
[(( 	
HttpPost((	 
((( 
$str(( 6
)((6 7
]((7 8
public)) 
void)) 
Accept)) 
()) 
Guid)) 
	requestId))  )
)))) *
{** 	
throw++ 
new++ !
NotSupportedException++ +
(+++ ,
)++, -
;++- .
},, 	
[.. 	
HttpPost..	 
(.. 
$str.. 7
)..7 8
]..8 9
public// 
void// 
Decline// 
(// 
Guid//  
	requestId//! *
)//* +
{00 	
throw11 
new11 !
NotSupportedException11 +
(11+ ,
)11, -
;11- .
}22 	
}33 
}44 ª"
QD:\macrotracker\MacroTracker\MacroTracker.Users\Controllers\TrainersController.cs
	namespace 	
MacroTracker
 
. 
Users 
. 
Api  
.  !
Controllers! ,
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
TrainersController #
:$ %
BaseApiController& 7
{ 
private 
readonly 
ILogger  
<  !
TrainersController! 3
>3 4
_logger5 <
;< =
public 
TrainersController !
(! "
	IMediator" +
mediator, 4
,4 5
ILogger6 =
<= >
TrainersController> P
>P Q
loggerR X
)X Y
:Z [
base\ `
(` a
mediatora i
)i j
=>k m
_loggern u
=v w
loggerx ~
;~ 
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
string !
>! "
Get# &
(& '
)' (
=>) +
new, /
string0 6
[6 7
]7 8
{9 :
$str; C
,C D
$strE M
}N O
;O P
[ 	
HttpGet	 
( 
$str 
, 
Name 
= 
$str  %
)% &
]& '
public 
string 
Get 
( 
int 
id  
)  !
{ 	
return 
$str 
; 
} 	
[!! 	
HttpPost!!	 
]!! 
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
Post"") -
(""- .
["". /
FromBody""/ 7
]""7 8"
RegisterTrainerRequest""9 O
request""P W
)""W X
{## 	
try$$ 
{%% 
await&& 
Mediator&& 
.&& 
Send&& #
(&&# $
request&&$ +
)&&+ ,
;&&, -
return'' 
Ok'' 
('' 
)'' 
;'' 
}(( 
catch)) 
()) (
EntityAlreadyExistsException)) /
e))0 1
)))1 2
{** 
_logger++ 
.++ 
LogError++  
(++  !
e++! "
.++" #
Message++# *
)++* +
;+++ ,
Response,, 
.,, 

StatusCode,, #
=,,$ %
$num,,& )
;,,) *
return-- 

BadRequest-- !
(--! "
e--" #
.--# $
Message--$ +
)--+ ,
;--, -
}.. 
}// 	
[22 	
HttpPut22	 
(22 
$str22 
)22 
]22 
public33 
void33 
Put33 
(33 
int33 
id33 
,33 
[33  !
FromBody33! )
]33) *
string33+ 1
value332 7
)337 8
{44 	
}55 	
[88 	

HttpDelete88	 
(88 
$str88 
)88 
]88 
public99 
async99 
Task99 
<99 
IActionResult99 '
>99' (
Delete99) /
(99/ 0
Guid990 4
id995 7
)997 8
{:: 	
try;; 
{<< 
await== 
Mediator== 
.== 
Send== #
(==# $
new==$ '$
DeactivateTrainerRequest==( @
{==A B
	TrainerId>> 
=>> 
id>>  "
}?? 
)?? 
;?? 
return@@ 
	NoContent@@  
(@@  !
)@@! "
;@@" #
}AA 
catchBB 
(BB (
UserAlreadyInactiveExceptionBB /
eBB0 1
)BB1 2
{CC 
returnDD 

BadRequestDD !
(DD! "
eDD" #
.DD# $
MessageDD$ +
)DD+ ,
;DD, -
}EE 
}FF 	
}GG 
}HH ¦
ND:\macrotracker\MacroTracker\MacroTracker.Users\Controllers\UsersController.cs
	namespace

 	
MacroTracker


 
.

 
Users

 
.

 
Controllers

 (
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
UsersController  
:! "
BaseApiController# 4
{ 
public 
UsersController 
( 
	IMediator (
mediator) 1
)1 2
:3 4
base5 9
(9 :
mediator: B
)B C
{ 	
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Post) -
(- .
[. /
FromBody/ 7
]7 8
RegisterUserUseCase9 L
modelM R
)R S
{ 	
try 
{ 
await 
Mediator 
. 
Send #
(# $
model$ )
)) *
;* +
return 
Ok 
( 
) 
; 
} 
catch 
( (
EntityAlreadyExistsException /
e0 1
)1 2
{ 
return 
UnprocessableEntity *
(* +
e+ ,
., -
Message- 4
)4 5
;5 6
} 
}   	
["" 	
HttpGet""	 
]"" 
public## 
IActionResult## 
Get##  
(##  !
[##! "
	FromQuery##" +
]##+ ,
SearchUsersRequest##- ?
request##@ G
)##G H
{$$ 	
try%% 
{&& 
return'' 
Ok'' 
('' 
Mediator'' "
.''" #
Send''# '
(''' (
request''( /
)''/ 0
.''0 1
Result''1 7
)''7 8
;''8 9
}(( 
catch)) 
()) 
	Exception)) 
e)) 
))) 
{** 
return++ 

BadRequest++ !
(++! "
e++" #
.++# $
Message++$ +
)+++ ,
;++, -
},, 
}-- 	
}.. 
}// ‹
KD:\macrotracker\MacroTracker\MacroTracker.Users\Models\RegisterUserModel.cs
	namespace 	
MacroTracker
 
. 
Users 
. 
Api  
.  !
Models! '
{ 
public 

class 
RegisterUserModel "
{ 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 8
)8 9
]9 :
[ 	
RegularExpression	 
( 
$str 8
,8 9
ErrorMessage: F
=G H
$strI c
)c d
]d e
public		 
string		 
Username		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
[ 	
Required	 
( 
ErrorMessage 
=  
$str! =
)= >
]> ?
[ 	
EmailAddress	 
( 
ErrorMessage "
=# $
$str% D
)D E
]E F
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
( 
ErrorMessage 
=  
$str! :
): ;
]; <
[ 	
RegularExpression	 
( 
$str /
,/ 0
ErrorMessage1 =
=> ?
$str@ B
)B C
]C D
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str /
)/ 0
]0 1
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
StringLength	 
( 
maximumLength #
:# $
$num% '
,' (
MinimumLength) 6
=7 8
$num9 :
,: ;
ErrorMessage< H
=I J
$strK y
)y z
]z {
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ˆ	
:D:\macrotracker\MacroTracker\MacroTracker.Users\Program.cs
	namespace 	
MacroTracker
 
. 
Users 
{ 
public 

static 
class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
=>/ 1 
CreateWebHostBuilder2 F
(F G
argsG K
)K L
.L M
BuildM R
(R S
)S T
.T U
RunU X
(X Y
)Y Z
;Z [
public

 
static

 
IWebHostBuilder

 % 
CreateWebHostBuilder

& :
(

: ;
string

; A
[

A B
]

B C
args

D H
)

H I
=>

J L
WebHost 
.  
CreateDefaultBuilder (
(( )
args) -
)- .
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
;& '
} 
} Ô 
:D:\macrotracker\MacroTracker\MacroTracker.Users\Startup.cs
	namespace 	
MacroTracker
 
. 
Users 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddMvc 
( 
) 
. #
SetCompatibilityVersion 5
(5 6 
CompatibilityVersion6 J
.J K
Version_2_2K V
)V W
;W X
services 
. 
AddTransient !
<! "
	IEventBus" +
,+ ,
RabbitMQEventBus- =
>= >
(> ?
eb 
=> 
{   
var!! 
config!! 
=!!  
Configuration!!! .
.!!. /

GetSection!!/ 9
(!!9 :
$str!!: D
)!!D E
;!!E F
return"" 
new"" 
RabbitMQEventBus"" /
(""/ 0
config""0 6
[""6 7
$str""7 =
]""= >
,""> ?
config""@ F
[""F G
$str""G Q
]""Q R
,""R S
config""T Z
[""Z [
$str""[ e
]""e f
)""f g
;""g h
}## 
)## 
;## 
services$$ 
.$$ 

AddMediatR$$ 
($$  
typeof$$  &
($$& '
RegisterUserUseCase$$' :
)$$: ;
)$$; <
;$$< =
services%% 
.%% 
AddDbContext%% !
<%%! "
UsersDbContext%%" 0
>%%0 1
(%%1 2
cfg%%2 5
=>%%6 8
{&& 
var'' 
connectionString'' $
=''% &
Configuration''' 4
.''4 5

GetSection''5 ?
(''? @
$str''@ O
)''O P
.''P Q
Value''Q V
;''V W
cfg(( 
.(( 
UseSqlServer((  
(((  !
connectionString((! 1
)((1 2
;((2 3
})) 
))) 
;)) 
services** 
.** 
AddTransient** !
<**! "
ITrainerRepository**" 4
,**4 5
EfTrainerRepository**6 I
>**I J
(**J K
)**K L
;**L M
services++ 
.++ 
AddTransient++ !
<++! "
IUserRepository++" 1
,++1 2
EfUserRepository++3 C
>++C D
(++D E
)++E F
;++F G
services,, 
.,, 
AddTransient,, !
<,,! "&
ITrainingRequestRepository,," <
,,,< ='
EfTrainingRequestRepository,,> Y
>,,Y Z
(,,Z [
),,[ \
;,,\ ]
}-- 	
public00 
void00 
	Configure00 
(00 
IApplicationBuilder00 1
app002 5
,005 6
IHostingEnvironment007 J
env00K N
)00N O
{11 	
if22 
(22 
env22 
.22 
IsDevelopment22 !
(22! "
)22" #
)22# $
{33 
app44 
.44 %
UseDeveloperExceptionPage44 -
(44- .
)44. /
;44/ 0
}55 
else66 
{77 
app99 
.99 
UseHsts99 
(99 
)99 
;99 
}:: 
app<< 
.<< 
UseHttpsRedirection<< #
(<<# $
)<<$ %
;<<% &
app== 
.== 
UseMvc== 
(== 
)== 
;== 
}>> 	
}?? 
}@@ 